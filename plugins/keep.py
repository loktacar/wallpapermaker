#!/usr/bin/env python
# -*- cofing: utf-8 -*-

import logging
from plugin import Plugin

class Keep(Plugin):
    """
    Keep previous images generated by wallpapermaker by
    postfixing each saved image with a sequence number.
    """
    def __init__(self, config):
        super(Keep, self).__init__()
        self.number = 0 # Generated images counter
        self.original_wallpaper = config['wallpaper']

    @staticmethod
    def get_instances(plugins, config):
        if config['keep']: # Instantiate self
            return [Keep(config)]

    def generate_finished(self, *args):
        self.number += 1

    def generate_starting(self, *args):
        # Monkey-patch the 'wallpaper' key of the config object
        if self.config['wallpaper'].startswith(self.original_wallpaper):
            self.config['wallpaper'] = self.original_wallpaper + ".{}".format(
                self.number % self.config['keep'])
